%% kvdb.sty
%% Copyright 2021 WunschUnreif
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is WunschUnreif.
%
% This work consists of the files kvdb.sty

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{kvdb}[2021/07/09 A simple declarative key-value database.]

\RequirePackage{kvdefinekeys}
\RequirePackage{kvsetkeys}

\newcommand{\kvdb@info}[1]{\PackageInfo{kvdb}{#1}{}}
\newcommand{\kvdb@warning}[1]{\PackageWarning{kvdb}{#1}{}}
\newcommand{\kvdb@error}[1]{\PackageError{kvdb}{#1}{}}

% Create a key val database by the given scheme 
% \kvdb@create{<database name>}{            %
%      <key> = {                            % the key name for setting this field.
%           name    = <field name>,         % the name for accessing this field, i.e. will create a macro \<database name>@<field name>.
%           choices = {<choice 1>, ...},    % optional, limits the possible values for this field,
%           initial = <initial value>,      % optional, initial value of this field,
%           default = <default value>,      % optional, default value of this field, which means the value set.
%                                           % when you only specify this field but passes no specific value.
%           trigger = <code>                % optional, trigger code executed when this field is updated.
%       },
%       ...
% }
% for choices keys, the following newif is provided for each possible choice:
%   \newif\if<database name>@<field name>@<choice>
\newcommand{\kvdb@create}[2]{%
    \kv@set@family@handler{kvdb@#1@scheme}{%
        \kvdb@info{##1 is set to ##2}
        % ##1 is <key>, ##2 is the scheme definition for <key>
        \@namedef{kvdb@#1@##1@name}{##1}
        \@namedef{kvdb@#1@##1@initial}{}
        \@namedef{kvdb@#1@##1@default}{}
        \@namedef{kvdb@#1@##1@reset}{}                  % set every choice item to false
        \@namedef{kvdb@#1@##1@check}{}                  % check the value is one of choices
        \@namedef{kvdb@#1@##1@trigger}{}                % trigger code called when value updated
        \kv@define@key{kvdb@#1@##1@spec}{name}{%
            % ####1 is /<database name>/<key>/<name>
            \@namedef{kvdb@#1@##1@name}{####1}
        }
        \kv@define@key{kvdb@#1@##1@spec}{trigger}{%
            % ####1 is /<database name>/<key>/<trigger>
            \@namedef{kvdb@#1@##1@trigger}{\protect####1}
        }
        \kv@define@key{kvdb@#1@##1@spec}{initial}{%
            % ####1 is /<database name>/<key>/<initial>
            \@namedef{kvdb@#1@##1@initial}{####1}
        }
        \kv@define@key{kvdb@#1@##1@spec}{default}{%
            % ####1 is /<database name>/<key>/<default>
            \@namedef{kvdb@#1@##1@default}{####1}
            \expandafter\ifx\csname kvdb@#1@##1@initial\endcsname\@empty%
                \@namedef{kvdb@#1@##1@initial}{####1}%
            \fi
        }
        \kv@set@family@handler{kvdb@#1@##1@choices}{%
            % ####1 is a choice item for /<database name>/<key>
            \expandafter\ifx\csname kvdb@#1@##1@default\endcsname\@empty%
                \@namedef{kvdb@#1@##1@default}{####1}%
            \fi
            \expandafter\ifx\csname kvdb@#1@##1@initial\endcsname\@empty%
                \@namedef{kvdb@#1@##1@initial}{####1}%
            \fi
            \expandafter\newif\csname if#1@\@nameuse{kvdb@#1@##1@name}@####1\endcsname
            \expandafter\g@addto@macro\csname kvdb@#1@##1@reset\endcsname{%
                \csname #1@\@nameuse{kvdb@#1@##1@name}@####1false\endcsname%
            }
        }
        \kv@define@key{kvdb@#1@##1@spec}{choices}{%
            % ####1 is /<database name>/<key>/<choices>
            \kvsetkeys{kvdb@#1@##1@choices}{####1}
            \@namedef{kvdb@#1@##1@check}{%
                \@ifundefined{%
                    if#1@\@nameuse{kvdb@#1@##1@name}@\@nameuse{#1@\@nameuse{kvdb@#1@##1@name}}%
                }{%
                    \kvdb@error{You cannot assign value `\@nameuse{#1@\@nameuse{kvdb@#1@##1@name}}' to the key `#1.\@nameuse{kvdb@#1@##1@name}'.}
                }{%
                    \@nameuse{kvdb@#1@##1@reset}
                    \@nameuse{#1@\@nameuse{kvdb@#1@##1@name}@\@nameuse{#1@\@nameuse{kvdb@#1@##1@name}}true}
                }
            }
        }
        \kvsetkeys{kvdb@#1@##1@spec}{##2}
        \kv@define@key{#1}{##1}[\@nameuse{kvdb@#1@##1@default}]{%
            % ####1 is the value trying to assign to this <key>
            \@namedef{#1@\@nameuse{kvdb@#1@##1@name}}{####1}
            \@nameuse{kvdb@#1@##1@check}
            \@nameuse{kvdb@#1@##1@trigger}
        }
        \kvsetkeys@expandafter{#1}{##1=\@nameuse{kvdb@#1@##1@initial}}
    }
    \kvsetkeys@expandafter{kvdb@#1@scheme}{#2}
}

